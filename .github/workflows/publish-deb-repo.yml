name: Publish Debian Repository

on:
  workflow_run:
    workflows: ["Build, Scan, Package, Sign, and Release K8s Tools"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  publish_repo:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: Create gh-pages branch if it doesn't exist
        run: |
          if [ ! -d "gh-pages/.git" ]; then
            echo "Creating new gh-pages branch..."
            mkdir -p gh-pages
            cd gh-pages
            git init
            git checkout -b gh-pages
            git remote add origin https://github.com/${{ github.repository }}.git
            cd ..
          fi

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev apt-utils gnupg

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          # Export public key in the root directory
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --export -a > gh-pages/public_key.asc
          # Also create a copy with .txt extension as a workaround
          cp gh-pages/public_key.asc gh-pages/public_key.txt

      - name: Download all release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create necessary directories
          mkdir -p gh-pages/pool/main/k/k8s-tools
          mkdir -p gh-pages/dists/stable/main/binary-amd64
          
          # Get all releases and download .deb files
          echo "Downloading all .deb packages from releases..."
          
          gh release list --repo ${{ github.repository }} --limit 100 --json tagName,assets | jq -r '.[] | .assets[] | select(.name | endswith(".deb")) | .url' | while read -r url; do
            filename=$(basename "$url")
            echo "Downloading $filename..."
            wget -q "$url" -O "gh-pages/pool/main/k/k8s-tools/$filename" || echo "Failed to download $filename"
          done
          
          # Also download signature files
          gh release list --repo ${{ github.repository }} --limit 100 --json tagName,assets | jq -r '.[] | .assets[] | select(.name | endswith(".deb.asc")) | .url' | while read -r url; do
            filename=$(basename "$url")
            echo "Downloading signature $filename..."
            wget -q "$url" -O "gh-pages/pool/main/k/k8s-tools/$filename" || echo "Failed to download $filename"
          done

      - name: Generate Packages file
        run: |
          cd gh-pages
          dpkg-scanpackages pool/main /dev/null > dists/stable/main/binary-amd64/Packages
          gzip -9c dists/stable/main/binary-amd64/Packages > dists/stable/main/binary-amd64/Packages.gz

      - name: Create Release file
        run: |
          cd gh-pages/dists/stable
          cat > Release << EOF
          Origin: sansnom-co
          Label: K8s Tools
          Suite: stable
          Codename: stable
          Version: 1.0
          Architectures: amd64
          Components: main
          Description: Statically linked Kubernetes CLI tools
          Date: $(date -Ru)
          EOF
          
          # Add checksums
          echo "MD5Sum:" >> Release
          find main -type f | while read -r file; do
            md5sum "$file" | sed 's|main/|./main/|' >> Release
          done
          
          echo "SHA256:" >> Release
          find main -type f | while read -r file; do
            sha256sum "$file" | sed 's|main/|./main/|' >> Release
          done

      - name: Sign Release file
        run: |
          cd gh-pages/dists/stable
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --detach-sign --armor -o Release.gpg Release
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --clearsign -o InRelease Release

      - name: Create Jekyll configuration
        run: |
          # We need .nojekyll to serve raw files
          touch gh-pages/.nojekyll
          
          # Create a simple HTML page instead of using Jekyll theme
          cat > gh-pages/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>K8s Tools - Debian Repository</title>
    <style>
        :root {
            --bg-color: #0d1117;
            --text-color: #58a6ff;
            --code-bg: #161b22;
            --border-color: #30363d;
        }
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
        }
        h1, h2, h3 {
            color: #58a6ff;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 0.3em;
        }
        code {
            background-color: var(--code-bg);
            padding: 0.2em 0.4em;
            border-radius: 3px;
            font-size: 85%;
        }
        pre {
            background-color: var(--code-bg);
            padding: 16px;
            overflow-x: auto;
            border-radius: 6px;
            border: 1px solid var(--border-color);
        }
        pre code {
            background-color: transparent;
            padding: 0;
        }
        a {
            color: #58a6ff;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin: 1em 0;
        }
        th, td {
            border: 1px solid var(--border-color);
            padding: 0.6em 1em;
            text-align: left;
        }
        th {
            background-color: var(--code-bg);
        }
        .highlight {
            color: #7ee83f;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ K8s Tools Debian Repository</h1>
        
        <p>This repository provides Debian packages for statically linked Kubernetes CLI tools. All tools are built from source and statically linked for maximum portability.</p>
        
        <h2>üì¶ Quick Installation</h2>
        
        <p>Add this repository to your Debian/Ubuntu system:</p>
        
        <pre><code># Add the GPG key
wget -O- <a href="/k8s-tools/public_key.asc">https://sansnom-co.github.io/k8s-tools/public_key.asc</a> | \
  sudo gpg --dearmor -o /usr/share/keyrings/sansnom-k8s-tools.gpg

# Add the repository
echo "deb [signed-by=/usr/share/keyrings/sansnom-k8s-tools.gpg] \
  https://sansnom-co.github.io/k8s-tools stable main" | \
  sudo tee /etc/apt/sources.list.d/sansnom-k8s-tools.list

# Update and install
sudo apt update
sudo apt install k8s-tools</code></pre>
        
        <h2>üõ†Ô∏è Included Tools</h2>
        
        <table>
            <thead>
                <tr>
                    <th>Tool</th>
                    <th>Description</th>
                    <th>Version</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><strong>kubectl</strong></td>
                    <td>Kubernetes command-line tool</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>helm</strong></td>
                    <td>Kubernetes package manager</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>jq</strong></td>
                    <td>Command-line JSON processor</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>skopeo</strong></td>
                    <td>Container image inspection and copying</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>oras</strong></td>
                    <td>OCI Registry As Storage CLI</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>cosign</strong></td>
                    <td>Container signing and verification</td>
                    <td>Latest</td>
                </tr>
                <tr>
                    <td><strong>flux</strong></td>
                    <td>GitOps toolkit for Kubernetes</td>
                    <td>Latest</td>
                </tr>
            </tbody>
        </table>
        
        <h2>üîê Security</h2>
        
        <ul>
            <li>All packages are GPG signed</li>
            <li>Binaries are statically linked</li>
            <li>Built from official upstream sources</li>
            <li>Automated security scanning with Trivy</li>
        </ul>
        
        <h2>üìù Repository Details</h2>
        
        <ul>
            <li><strong>Suite</strong>: stable</li>
            <li><strong>Component</strong>: main</li>
            <li><strong>Architecture</strong>: amd64</li>
            <li><strong>GPG Key ID</strong>: B24A23CCB7E16E36</li>
        </ul>
        
        <h2>üîó Links</h2>
        
        <ul>
            <li><a href="https://github.com/sansnom-co/k8s-tools">GitHub Repository</a></li>
            <li><a href="https://github.com/sansnom-co/k8s-tools/releases">Releases</a></li>
            <li><a href="/k8s-tools/public_key.asc">GPG Public Key</a></li>
        </ul>
        
        <h2>üìä Repository Structure</h2>
        
        <pre><code>/
‚îú‚îÄ‚îÄ <a href="/k8s-tools/dists/">dists/stable/</a>         # APT metadata
‚îÇ   ‚îî‚îÄ‚îÄ main/
‚îÇ       ‚îî‚îÄ‚îÄ binary-amd64/
‚îú‚îÄ‚îÄ <a href="/k8s-tools/pool/">pool/main/k/k8s-tools/</a>  # Package files
‚îî‚îÄ‚îÄ <a href="/k8s-tools/public_key.asc">public_key.asc</a>          # GPG public key</code></pre>
        
        <hr>
        
        <p><small>Updated automatically via GitHub Actions</small></p>
    </div>
</body>
</html>
EOF
          
          # Create a README in case someone browses the directories
          cat > gh-pages/README.md << 'EOF'
# K8s Tools Debian Repository

This is the APT repository for k8s-tools. 

For installation instructions, visit: https://sansnom-co.github.io/k8s-tools/
EOF

      - name: Create CNAME file
        run: |
          # Only create CNAME if you have a custom domain
          # echo "your-custom-domain.com" > gh-pages/CNAME

      - name: Commit and push to gh-pages
        run: |
          cd gh-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "Update Debian repository [skip ci]"
          git push origin gh-pages --force